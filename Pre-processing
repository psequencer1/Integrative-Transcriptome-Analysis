########### RRA ###############3
######
install.packages("RobustRankAggreg") 


####important####
#Gene name column in txt file must be "SYMBOL" and by filter function in excel log2 colum have to be ranked from smallest to largest

setwd("C:/Users/psequ/OneDrive/Desktop/Thesis Systems/RRA") 
getwd()
dir()

padj=0.05 
logFC=1 

# ,"GSE106582.txt"

files=c("GSE110225.txt" ,"GSE113513.txt" , "GSE37182.txt",  "GSE74602.txt",
         "GSE37364.txt",  "GSE41657.txt" , "GSE71187.txt", "GSE23878.txt",
        "GSE87211.txt"  ,"GSE89076.txt", "TCGA-COAD.txt",
        "TCGA-READ.txt" 
) 

upList=list() 
downList=list () 
allFCList=list ()

for(i in 1:length(files)){
  inputFile=files[i]
  rt=read.table(inputFile,header = T)
  header=unlist(strsplit(inputFile,"\\."))
  downList[[header[1]]]=as.vector((rt[,1])) 
  upList[[header[1]]]=rev(as.vector(rt[,1]))
  fcCol=rt[,1:2]
  colnames(fcCol)=c("SYMBOL",header[[1]])
  allFCList[[header[1]]]=fcCol
}

mergeLe=function(x,y){
  merge(x,y,by="SYMBOL",all=T)}
newTab=Reduce(mergeLe,allFCList)
newTab <- newTab[!duplicated(newTab$SYMBOL), ]

rownames(newTab)=newTab[,1]
newTab=newTab[,2:ncol(newTab)]
newTab[is.na(newTab)]=0

head(newTab)

library (RobustRankAggreg)
upMatrix = rankMatrix (upList) 
upAR = aggregateRanks (rmat=upMatrix) 
colnames (upAR)=c("Name", "Pvalue") 
upAdj=p.adjust (upAR$Pvalue, method="BH") 
upXls=cbind (upAR, adjPvalue=upAdj) 
upFC=newTab[as.vector (upXls[, 1]), ] 
upXls=cbind (upXls, logFC=rowMeans (upFC)) 
upSig=upXls[(upXls$adjPvalue<padj & upXls$logFC>logFC), ] 
write.table (upSig, file="upSig.txt", sep="\t", quote=F, row.names=F)

downMatrix = rankMatrix (downList) 
downAR = aggregateRanks (rmat=downMatrix) 
colnames (downAR) =c("Name", "Pvalue") 
downAdj=p.adjust (downAR$Pvalue, method="BH") 
downXls=cbind (downAR, adjPvalue=downAdj) 
downFC=newTab[as.vector (downXls [, 1]), ] 
downXls=cbind (downXls, logFC=rowMeans (downFC))
downSig=downXls[(downXls$adjPvalue<padj & downXls$logFC< -logFC), ] 
write.table (downSig, file="downSig.txt", sep="\t", quote=F, row.names=F)

#logFC. tiff 
hminput=newTab [c (as.vector (upSig[1:20, 1]), as.vector (downSig[1:20, 1])), ] 

#### shinyCircus for 37 hub genes
input=hminput[c("CEACAM7","DPEP1","CLCA1","CLCA4","GUCA2B","CDH3","MS4A12","SLC4A4","SLC26A3","CHGA","AQP8","CEMIP","CA2","KRT23","GCG","INHBA","PYY","CA1","MMP7","MMP3","CLDN8","SST","CLDN1","CXCL3","CXCL1","FOXQ1","CLDN2","CHP2","CA4","CA7","CST1","ZG16","ETV4","MMP1","GUCA2A","CD177","MT1M"
),]

inputlog=downXls[c("CEACAM7","DPEP1","CLCA1","CLCA4","GUCA2B","CDH3","MS4A12","SLC4A4","SLC26A3","CHGA","AQP8","CEMIP","CA2","KRT23","GCG","INHBA","PYY","CA1","MMP7","MMP3","CLDN8","SST","CLDN1","CXCL3","CXCL1","FOXQ1","CLDN2","CHP2","CA4","CA7","CST1","ZG16","ETV4","MMP1","GUCA2A","CD177","MT1M"
),]


write.table(input,"input.txt", sep="\t", quote=F)
####

library (pheatmap)

tiff(filename = "Heatmap.tiff",
     width = 15, height = 20, units = "cm",compression = "lzw",bg="white", res=400)

pheatmap(hminput, display_numbers = TRUE,fontsize_row=10, fontsize_col=12,
color = colorRampPalette(c("green","white","red")) (50),
cluster_cols = FALSE, cluster_rows = FALSE )

dev.off()


###### correlation of 37 genes for shinyCircus 
cormat <- cor(t(yellow_1), method = "pearson")

corlist <- apply(cormat, 2, function(x) names(which(x>0.65)))
corlist_yellow <- do.call(rbind, lapply(corlist, function(x) paste(x, collapse = ", ")))

corlist_yellow<- as.data.frame(corlist_yellow)
corlist_yellow$v2<- rownames(corlist_yellow)

library(tidyr)
library(dplyr)

### separate rows by comma
corlist_yellow1<-separate_rows(corlist_yellow, V1)

### OR 

corlist_black1<- corlist_black %>% 
  mutate(V1 = strsplit(as.character(V1), ",")) %>% 
  unnest(V1)

write.table(corlist_yellow1,"corlist_yellow1.txt", sep="\t", quote=F)
